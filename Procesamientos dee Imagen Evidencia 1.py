# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VpYaaDGlik9advkCvE5Vymp4F3NApEYn
"""

# Instalar librerías necesarias
!pip install opencv-python pillow matplotlib

import cv2
import numpy as np
from PIL import Image, ImageFilter
import matplotlib.pyplot as plt
from google.colab import files

# Subir imagen desde tu compu
uploaded = files.upload()
filename = next(iter(uploaded))

# Leer imagen con OpenCV
img_cv = cv2.imread(filename)
img_rgb = cv2.cvtColor(img_cv, cv2.COLOR_BGR2RGB)

# Convertir a PIL para aplicar filtros de PIL
img_pil = Image.fromarray(img_rgb)

# 1. Filtro: Desenfoque Gaussiano (PIL)
img_blur = img_pil.filter(ImageFilter.GaussianBlur(radius=5))

# 2. Filtro: Detección de bordes Canny (OpenCV)
img_gray = cv2.cvtColor(img_rgb, cv2.COLOR_RGB2GRAY)
img_canny = cv2.Canny(img_gray, 100, 200)

# 3. Filtro: Enfoque (Sharpening) (OpenCV)
kernel = np.array([[0, -1, 0],
                   [-1, 5, -1],
                   [0, -1, 0]])
img_sharpened = cv2.filter2D(img_rgb, -1, kernel)

# Mostrar resultados
plt.figure(figsize=(12, 8))

plt.subplot(2, 2, 1)
plt.imshow(img_rgb)
plt.title("Original")
plt.axis('off')

plt.subplot(2, 2, 2)
plt.imshow(img_blur)
plt.title("Desenfoque Gaussiano")
plt.axis('off')

plt.subplot(2, 2, 3)
plt.imshow(img_canny, cmap='gray')
plt.title("Detección de Bordes (Canny)")
plt.axis('off')

plt.subplot(2, 2, 4)
plt.imshow(img_sharpened)
plt.title("Filtro de Enfoque")
plt.axis('off')

plt.tight_layout()
plt.show()



